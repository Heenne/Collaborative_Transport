<launch>

    <!--    Laucnh the robot hardware
            Access move base server
            Sate controlle for the knowledge of current manipulator state
            Joint controller for teached movemet
            impedance controller for transport movement
    -->
    <include file="$(find mur_hardware_helper)/launch/mur.launch">
        <arg name="move_base" value="true"/>
        <arg name="controllers_started" value="joint_state_controller robot_status_controller position_joint_controller"/>
    </include>

    <!-- Access teached movement for the manipulator -->
    <arg name="poses_file_name" default="transport_poses.yaml"/>
    <node name="move_teached" type="pose_teacher_node.py" pkg="robot_teacher"  output="screen" ns="mur/ur">
        <rosparam command="load" file="$(find mur_hardware_helper)/config/move_teached.yaml" subst_value="true"/>
    </node>

    <!-- Launch the formation slave controller -->
    <include file="$(find multi_robot_controller)/launch/slave.launch" ns="mur/mir">
        <arg name="config_file" value="$(find transport_launcher)/config/mur_slave_behind.yaml"/>
    </include>

</launch>